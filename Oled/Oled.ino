#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width,  in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// declare an SSD1306 display object connected to I2C
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

void setup() {
  // Set the baud rate for the Serial port
  Serial.begin(9600);

  if (!oled.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    while (true);
  }
  delay(1000);
  oled.clearDisplay();
  oled.setCursor(0,0);
  oled.setTextSize(2);
  oled.setTextColor(WHITE);
  oled.print("Press Button for Crop Suggestion");
  oled.display();
  delay(1000);
}

void loop(){
  
  oled.clearDisplay();
  oled.setTextSize(1);
  oled.setTextColor(WHITE);
  oled.setCursor(0,0);
  oled.print("Nitrogen:");
  oled.setCursor(5,18);
  oled.print(321);
  oled.setTextSize(1);
  oled.setCursor(43,18);
  oled.print("mg/Kg");
  oled.display();
  delay(2000);

  // oled.clearDisplay();
  // oled.setTextSize(2);
  // oled.setTextColor(WHITE);
  // oled.setCursor(0,0);
  // oled.print("Phosphorus:");
  // oled.setCursor(5,18);
  // oled.print(231);
  // oled.setTextSize(1);
  // oled.setCursor(43,18);
  // oled.print("mg/Kg");
  // oled.display();
  // delay(2000);

  // oled.clearDisplay();
  // oled.setTextSize(2);
  // oled.setTextColor(WHITE);
  // oled.setCursor(0,0);
  // oled.print("Potassium:");
  // oled.setCursor(5,18);
  // oled.print(231);
  // oled.setTextSize(1);
  // oled.setCursor(43,18);
  // oled.print("mg/Kg");
  // oled.display();
  // delay(2000);

  // oled.clearDisplay();
  // oled.setTextSize(2);
  // oled.setTextColor(WHITE);
  // oled.setCursor(0,0);
  // oled.print("Moisture:");
  // oled.setCursor(6,18);
  // oled.print(84);
  // oled.setTextSize(2);
  // oled.setCursor(46,18);
  // oled.print("%");
  // oled.display();
  // delay(2000);

  // oled.clearDisplay();
  // oled.setTextSize(2);
  // oled.setTextColor(WHITE);
  // oled.setCursor(0,0);
  // oled.print("Temp:");
  // oled.setCursor(6,18);
  // oled.print(23);
  // oled.setTextSize(1);
  // oled.setCursor(46,18);
  // oled.print("Â°C");
  // oled.display();
  // delay(2000);

  // oled.clearDisplay();
  // oled.setTextSize(2);
  // oled.setTextColor(WHITE);
  // oled.setCursor(0,0);
  // oled.print("Humidity:");
  // oled.setCursor(6,18);
  // oled.print(97);
  // oled.setTextSize(2);
  // oled.setCursor(46,18);
  // oled.print("%");
  // oled.display();
  // delay(2000);

  // oled.clearDisplay();
  // oled.setTextSize(3);
  // oled.setTextColor(WHITE);
  // oled.setCursor(0,0);
  // oled.print("Rice");
  // oled.display();
  // delay(5000);
  
  // oled.clearDisplay();
  // oled.setCursor(0,0);
  // oled.setTextSize(2);
  // oled.setTextColor(WHITE);
  // oled.print("Press Button for Crop Suggestion");
  // oled.display();
}

// #include <SPI.h>
// #include <Wire.h>
// #include <Adafruit_GFX.h>
// #include <Adafruit_SSD1306.h>

// #define OLED_RESET 4
// Adafruit_SSD1306 display(128, 32, &Wire, -1);

// // this is the bitmap, change this variable for your specification.
// const unsigned char myBitmap [] PROGMEM = {
// 	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xff, 0xff, 0x1f, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xff, 0x83, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xc0, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
// 	0x00, 0x00, 0x00, 0x3f, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xf8, 0x00, 0xff, 
// 	0xff, 0xff, 0xfc, 0x30, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xff, 
// 	0xff, 0x0e, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x03, 0xff, 0xff, 0xff, 0xf7, 
// 	0x80, 0x03, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x1f, 0x31, 0xff, 0xff, 0xe1, 0x9c, 
// 	0x3e, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0x01, 0x8f, 0xff, 0x1c, 0x40, 0xff, 
// 	0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xe0, 0x9d, 0xff, 0x84, 0xc1, 0xff, 0x81, 
// 	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xfc, 0x61, 0xfc, 0xf9, 0x87, 0xff, 0xc0, 0xff, 
// 	0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xfe, 0x36, 0x3e, 0x1b, 0x07, 0xff, 0xc0, 0x07, 0xff, 
// 	0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x1b, 0x9f, 0xf3, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xff, 
// 	0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0x09, 0x3c, 0x32, 0x0f, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 
// 	0xff, 0xff, 0x80, 0x3f, 0xff, 0x8d, 0x8f, 0xf3, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xf0, 0x00, 0x0f, 0xff, 0xfc, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 
// 	0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
// 	0x07, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
// 	0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
// 	0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
// 	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf8, 0x7c, 0x3f, 0xfe, 0x0f, 0xff, 0xdf, 0x07, 0xe0, 
// 	0xff, 0xc7, 0xfe, 0x0f, 0x0f, 0xf0, 0xf1, 0xfc, 0x3e, 0x1f, 0x0f, 0x87, 0xdf, 0x87, 0xe0, 0xff, 
// 	0x01, 0xff, 0x0e, 0x3f, 0xf0, 0x07, 0xfc, 0x3c, 0x3f, 0x0f, 0xc0, 0x7f, 0x87, 0xe0, 0xfe, 0x70, 
// 	0xff, 0x08, 0xff, 0xf0, 0xe1, 0xfc, 0x38, 0x7f, 0x0f, 0xfe, 0x07, 0x87, 0xe0, 0xf8, 0x78, 0x3f, 
// 	0x0c, 0x3f, 0xf0, 0xf8, 0x7c, 0x3e, 0x1e, 0x0f, 0x9f, 0x8f, 0x07, 0xe0, 0xf0, 0xfc, 0x1e, 0x0f, 
// 	0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
// };


// void setup() 
// {
//   Serial.begin(9600);
//   display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // here the 0x3c is the I2C address, check your i2c address if u have multiple devices.

//   display.drawBitmap(0, 0, myBitmap, 128, 32, WHITE);
//   display.display();
//   delay(2000);
// }

// void loop() 
// {
  
// }